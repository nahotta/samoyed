# JDBC 接続設定
# ※ ここのDB設定はscalikejdbcのジェネレータのみ適用している（それ以外のDB設定はconf/application.confを参照）

jdbc.driver=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://127.0.0.1:3306/eventapi
jdbc.username=root
jdbc.password=password
jdbc.schema=eventapi

# scalikejdbcのジェネレータのオプション
# 参照: https://github.com/scalikejdbc/scalikejdbc-cookbook/blob/master/ja/09_source_code_generator.md

# 生成するクラスを配置するパッケージ
generator.packageName=models
# ソースコードの改行コード: LF/CRLF
generator.lineBreak=LF
# テンプレート: interpolation/queryDsl
generator.template=queryDsl
# テストのテンプレート: specs2unit/specs2acceptance/ScalaTestFlatSpec
generator.testTemplate=specs2unit
# 生成するファイルの文字コード
generator.encoding=UTF-8
# case classとして作成するか(22列以上のテーブルに対応する場合は、Scala 2.11以降が必須)
generator.caseClassOnly=true
# scalikejdbc-syntax-support-macroを使用するか？: true/false
generator.autoConstruct=true
# sessionのimplicitパラメータに、デフォルトパラメータを付与するか？: true/false
generator.defaultAutoSession=true
# Datetimeを表現する際に使うclassの指定: org.joda.time.DateTime/java.time.ZonedDateTime/java.time.OffsetDateTime
generator.dateTimeClass=org.joda.time.DateTime
# findAll等で返す型を指定：list/vector/array/canbuildfrom(デフォルトlist)
generator.returnCollectionType=list